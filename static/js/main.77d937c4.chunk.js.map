{"version":3,"sources":["pages/about.js","pages/shells.js","components/navbar.js","App.js","index.js"],"names":["Aboutpage","className","Shellspage","href","Banner","Navbar","to","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77d937c4.chunk.js","sourcesContent":["// pages/About.js\nimport React from \"react\"\nimport \"../scss/main.scss\"\n\nconst Aboutpage = () => (\n  <div className=\"contentBox\">\n  <div className=\"content\">\n    <h1 className=\"title is-1\">This is the About Page</h1>\n    <p>\n      Class aptent taciti sociosqu ad litora torquent per conubia nostra, per\n      inceptos himenaeos. Vestibulum ante ipsum primis in faucibus orci luctus\n      et ultrices posuere cubilia curae; Duis consequat nulla ac ex consequat,\n      in efficitur arcu congue. Nam fermentum commodo egestas.\n    </p>\n  </div>\n  </div>\n);\n\nexport default Aboutpage;\n","import React from \"react\"\nimport \"../scss/main.scss\"\n\nconst Shellspage = () => (\n  <div className=\"contentBox\">\n    <div className=\"content\">\n      <h1 className=\"title is-1\">Shell projects</h1>\n      <p>\n        The final projects of the Unix-branch in Hive Helsinki are the\n        shell projects. In our project, I have made the parser, and I \n        will try to explain the inner workings of our parser here.\n      </p>\n      <p>\n        Since we are not allowed to use only very few ready made libraries, \n        making the parser seemed like an endless jungle of if-else statements. \n        Since we wanted to implement a solution that was able to handle all the\n        shell grammar, I ended up studying the topic and decided that after\n        tokenization I will change the infix notation of shell commands into \n        postfix notation using the shunting yard algorithm, and build an AST-tree \n        tree from there. The AST-tree is then traversed to handle all the operands \n        so that in the end, we were able to divide the command into series of simple \n        commands that are automatically executed in the right order after the precedence \n        handling done in the shunting yard.\n      </p>\n      <p>\n        Let's take a look at the workings of the with one pretty simple command:\n      </p>\n      <div className=\"exampleBox\"><div className=\"fake-selector\"><div className=\"fake-close\">x</div><div className=\"app-name\">./42sh</div></div><p className=\"typewriter\">echo hello world > file ; cat file</p></div>\n      <p>First the command is divided into simple tokens</p>\n      <div className=\"exampleBoxL\"><div className=\"fake-selector\"><div className=\"fake-close\">x</div><div className=\"app-name\">./42sh</div></div><div className=\"first-tokenization\">\n        <div className=\"token-box\"><p className=\"word\">echo</p><p className=\"token\">word</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"word\">hello</p><p className=\"token\">word</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"word\">world</p><p className=\"token\">word</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box-big\"><p className=\"word\">></p><p className=\"token\">redirection operator</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"word\">file</p><p className=\"token\">operator</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"word\">;</p><p className=\"token\">word</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"word\">cat</p><p className=\"token\">word</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"word\">file</p><p className=\"token\">word</p></div>\n      </div></div>\n      <p>Next the tokens are handled more in detail, and all operator are given their final token. Also in case of\n        redirections, the destination of redirection is added as a subtoken to the main redirection token.\n      </p>\n      <div className=\"exampleBoxL\"><div className=\"fake-selector\"><div className=\"fake-close\">x</div><div className=\"app-name\">./42sh</div></div><div className=\"first-tokenization\">\n        <div className=\"token-box\"><p className=\"word\">echo</p><p className=\"token\">word</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"word\">hello</p><p className=\"token\">word</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"word\">world</p><p className=\"token\">word</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"word\">></p><p className=\"token\">great</p><p className=\"redirection-to\">file</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"word\">;</p><p className=\"token\">word</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"word\">cat</p><p className=\"token\">word</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"word\">file</p><p className=\"token\">word</p></div>\n      </div></div>\n      <p>Since the algorithms used in making the binary tree are made for mathematical notations, there is a problem with\n        multiple words one after another without any binding operator. In matemathics, you can assume that if there is no \n        operator, the numbers are going to be multiplied. In our case, the problem was solved by adding a \"null\" token between\n        two words with no operator between them to help bind them together.\n      </p>\n      <div className=\"exampleBoxL\"><div className=\"fake-selector\"><div className=\"fake-close\">x</div><div className=\"app-name\">./42sh</div></div><div className=\"first-tokenization\">\n        <div className=\"token-box\"><p className=\"word\">echo</p><p className=\"token\">word</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"null\">.</p><p className=\"token\">null</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"word\">hello</p><p className=\"token\">word</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"null\">.</p><p className=\"token\">null</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"word\">world</p><p className=\"token\">word</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"word\">></p><p className=\"token\">great</p><p className=\"redirection-to\">file</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"word\">;</p><p className=\"token\">word</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"word\">cat</p><p className=\"token\">word</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"null\">.</p><p className=\"token\">null</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"word\">file</p><p className=\"token\">word</p></div>\n      </div></div>\n      <p>The mathematical notation has a precedence for the operations, that tells you in what order the\n        operations are supposed to be calculated. Also shell operations have a precedence, and in next step\n        the precedence of each operator is added. Since words are not considered operations, no precedence\n        is added to them.\n      </p>\n      <div className=\"exampleBoxXL\"><div className=\"fake-selector\"><div className=\"fake-close\">x</div><div className=\"app-name\">./42sh</div></div><div className=\"first-tokenization\">\n        <div className=\"token-box\"><p className=\"word\">echo</p><p className=\"token\">word</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"null\">.</p><p className=\"token\">null</p><p className=\"precedence\">5</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"word\">hello</p><p className=\"token\">word</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"null\">.</p><p className=\"token\">null</p><p className=\"precedence\">5</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"word\">world</p><p className=\"token\">word</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"word\">></p><p className=\"token\">great</p><p className=\"precedence\">4</p><p className=\"redirection-to\">file</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"word\">;</p><p className=\"token\">word</p><p className=\"precedence\">1</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"word\">cat</p><p className=\"token\">word</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"null\">.</p><p className=\"token\">null</p><p className=\"precedence\">5</p></div>\n        <div className=\"token-box\"><p className=\"next\">--></p></div>\n        <div className=\"token-box\"><p className=\"word\">file</p><p className=\"token\">word</p></div>\n      </div></div>\n      <p>Next step is to change the infix notation (that is, the operations are in the middle of the \"values\" = words)\n        to postfix notation (the operations are after the values = words). I decided to use the shunting yard algorithm \n        for this. You can read more about shunting yard algorithm in the <a href=\"https://en.wikipedia.org/wiki/Shunting-yard_algorithm\">Wikipedia page</a>\n      </p>\n    </div>\n  </div>\n);\n\nexport default Shellspage;\n","import React from \"react\"\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\"\nimport \"../scss/main.scss\"\n\nconst Banner = () => {\n  return (\n  <div className=\"banner\">\n    <div className=\"centerBanner\">\n      <hr className=\"bannerHr\"/>\n      <div className=\"name-and-stars\">\n        <div className=\"leftstars\">\n          <i className=\"fas fa-star star-0\"></i>\n          <i className=\"fas fa-star star-1\"></i>\n          <i className=\"fas fa-star star-2\"></i>\n          <i className=\"fas fa-star star-3\"></i>\n          <i className=\"fas fa-star star-4\"></i>\n        </div>\n        <div className=\"nameBox\">\n          <i className=\"helvi\">HELVI LAINEKALLIO</i>\n        </div>\n        <div className=\"rightstars\">\n          <i className=\"fas fa-star star-5\"></i>\n          <i className=\"fas fa-star star-6\"></i>\n          <i className=\"fas fa-star star-7\"></i>\n          <i className=\"fas fa-star star-8\"></i>\n          <i className=\"fas fa-star star-9\"></i>\n        </div>\n      </div>\n      <div className=\"nickBox\">\n        <i className=\"hlaineka\"> @hlaineka</i>\n        </div>\n      <hr className=\"bannerHr\"/>\n    </div>\n  </div>\n  )\n}\n\nconst Navbar = () => {\n  return (\n    <div className=\"header-container\">\n      <Banner />\n      <div className=\"navbar\">\n      <div className=\"centerNavbar\">\n        <Link className=\"headerLink\" to=\"/shells\">Shell projects</Link>\n        <Link className=\"headerLink\" to=\"/about\">About me</Link>\n      </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Prompt } from \"react-router\";\nimport Aboutpage from './pages/about'\nimport Shellspage from './pages/shells'\nimport Navbar from './components/navbar'\nimport \"./scss/main.scss\"\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n        <Switch>\n          <Route path=\"/about\">\n            <Aboutpage />\n          </Route>\n          <Route path=\"/\">\n            <Shellspage />\n          </Route>\n          <Route path=\"/shells\">\n            <Shellspage />\n          </Route>\n        </Switch>\n    </Router>\n  );\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport \"./scss/main.scss\"\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}